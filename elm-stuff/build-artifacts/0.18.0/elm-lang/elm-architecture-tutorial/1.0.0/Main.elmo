var _elm_lang$elm_architecture_tutorial$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'ChangeSource') {
			return _elm_lang$core$Native_Utils.update(
				model,
				{source: _p0._0});
		} else {
			return _elm_lang$core$Native_Utils.update(
				model,
				{destination: _p0._0});
		}
	});
var _elm_lang$elm_architecture_tutorial$Main$Model = F2(
	function (a, b) {
		return {source: a, destination: b};
	});
var _elm_lang$elm_architecture_tutorial$Main$model = A2(_elm_lang$elm_architecture_tutorial$Main$Model, '', '');
var _elm_lang$elm_architecture_tutorial$Main$ChangeDestination = function (a) {
	return {ctor: 'ChangeDestination', _0: a};
};
var _elm_lang$elm_architecture_tutorial$Main$ChangeSource = function (a) {
	return {ctor: 'ChangeSource', _0: a};
};
var _elm_lang$elm_architecture_tutorial$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$defaultValue(model.source),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onInput(_elm_lang$elm_architecture_tutorial$Main$ChangeSource),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(model.source),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$defaultValue(model.destination),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_elm_lang$elm_architecture_tutorial$Main$ChangeDestination),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(model.destination),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _elm_lang$elm_architecture_tutorial$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _elm_lang$elm_architecture_tutorial$Main$model, view: _elm_lang$elm_architecture_tutorial$Main$view, update: _elm_lang$elm_architecture_tutorial$Main$update})();
